# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting
on:
  push:
    branches:
      - master
  pull_request:
  # We can leave this empty, or specify branches like master, main, etc.
  # An empty block here means "run on all pull requests".

jobs:
  build_and_deploy_prod:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: Production
    # These environment variables are for your PRODUCTION environment (sprout-prod)
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_APP_ID }}
      FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.PROD_FIREBASE_SERVICE_ACCOUNT_JSON }}
      MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
      MAILJET_API_SECRET: ${{ secrets.MAILJET_API_SECRET }}
      MAILJET_SENDER_EMAIL: ${{ secrets.MAILJET_SENDER_EMAIL }}
      MAILJET_TEMPLATE_ID: ${{ secrets.MAILJET_TEMPLATE_ID }}
      MAILJET_STANDARD_TEMPLATE_ID: ${{ secrets.MAILJET_STANDARD_TEMPLATE_ID }}
    steps:
      - uses: actions/checkout@v4
      - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          projectId: sprout-prod
          channelId: live
          firebaseServiceAccount: '${{ secrets.PROD_FIREBASE_SERVICE_ACCOUNT_JSON }}'

  build_and_preview_pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: Preview
    # These environment variables are for your TESTING environment (sprout-2025)
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.TEST_NEXT_PUBLIC_FIREBASE_APP_ID }}
      FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.TEST_FIREBASE_SERVICE_ACCOUNT_JSON }}
      MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
      MAILJET_API_SECRET: ${{ secrets.MAILJET_API_SECRET }}
      MAILJET_SENDER_EMAIL: ${{ secrets.MAILJET_SENDER_EMAIL }}
      MAILJET_TEMPLATE_ID: ${{ secrets.MAILJET_TEMPLATE_ID }}
      MAILJET_STANDARD_TEMPLATE_ID: ${{ secrets.MAILJET_STANDARD_TEMPLATE_ID }}
    steps:
      - uses: actions/checkout@v4
      - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          projectId: sprout-prod # Always deploy previews to the prod project
          channelId: pr-${{ github.event.number }}--${{ github.head_ref }}
          firebaseServiceAccount: '${{ secrets.TEST_FIREBASE_SERVICE_ACCOUNT_JSON }}'
